AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume
  
  Sample SAM Template for cloud-resume

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: craigs-cloud-resume-challenge
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
    
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: siteAccess
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              -  - "arn:aws:s3:::"
                 - !Ref MyWebsite
                 - /*
      Bucket: !Ref MyWebsite
      
  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z023916018H3AS346QJQB # TODO: Don't hardcode me
      RecordSets:
        - Name: myresume.ctosterhout.com # TODO: Don't hardcode me
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName
 
  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only
        Aliases:
          - myresume.ctosterhout.com
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: craigs-cloud-resume-challenge.s3.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: craigs-cloud-resume-challenge.s3.us-east-1.amazonaws.com
            Id: craigs-cloud-resume-challenge.s3.us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html

 
  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: myresume.ctosterhout.com # TODO: Don't hardcode me
      ValidationMethod: DNS

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-counter
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"


      
  CounterFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: counter/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Counter:
          Type: Api 
          Properties:
            Path: /counter
            Method: get

Outputs:
  CounterAPI:
    Description: "API Gateway endpoint URL for Prod stage for Counter function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/counter/"
  CounterFunction:
    Description: "Counter Lambda Function ARN"
    Value: !GetAtt CounterFunction.Arn
  CounterFunctionIamRole:
    Description: "Implicit IAM Role created for Counter function"
    Value: !GetAtt CounterFunctionRole.Arn